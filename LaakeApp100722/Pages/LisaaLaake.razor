@page "/LisaaLaake"
@*@attribute [Authorize]*@
@using LaakeApp100722.Models
@using LaakeApp100722.Components
@inject AuthenticationStateProvider authProvider
@inject ILaakeData laakeData
@inject IUserData userData
@inject ILaakeMuotoData laakemuotoData
@inject IYoMukaanData yomaarittelyData
@inject IAnnosteluValiData annosteluData
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">Lisää lääke</h1>
<div class="row justify-content-center create-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="closebutton"><button class="btn btn-close" @onclick="ClosePage"></button></div>
        <div>
           <EditForm Model="yomukaan" OnValidSubmit="CreateYoMaarittely">
               <DataAnnotationsValidator/>
               <ValidationSummary/>
               <div class="input-section">
                   <div class="laake-otsikko text-uppercase fw-bold">Yö määrittely</div>
                   <div class="input-description">Määrittele yötuntien alku ja loppu, joilta ei lasketa lääkeottoa.</div>
                   <input type="time" id="suggestion-text" @bind-value="yomukaan.YoAlku"/>
                   <input type="time" id="suggestion-text1" @bind-value="yomukaan.YoLoppu"/>
               </div>
                
                <div class="center-children">
                <button class="btn btn-main btn-lg text-uppercase" type="submit">Luo yö mukaan</button>
            </div>
           </EditForm>
        </div>
           </div>
</div>
        
        @if(laakemuodot is not null)
        {
            
       <div class="row justify-content-center create-form pt-5">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="closebutton"><button class="btn btn-close" @onclick="ClosePage"></button></div>
        
        <EditForm Model="laake" OnValidSubmit="CreateLaake">
            <DataAnnotationsValidator/>
            <ValidationSummary/>
            <div class="input-section">
                <div class="laake-otsikko text-uppercase fw-bold">Lisää lääke</div>
                <label class="form-label fw-bold text-uppercase" for="suggestion-text">Lääke</label>
               
               @* input object type text*@
                <InputText class="form-control" id="suggestion-text" @bind-Value="laake.Nimi"/>
            </div>
            <div class="input-section">
                <label class="form-label fw-bold text-uppercase" for="annosmaara">Annostusmäärä</label>
                <InputNumber min="0" id="annosmaara" @bind-Value="laake.AnnosteleluMaara"/>
            </div>
             <div class="input-section">
                <label class="form-label fw-bold text-uppercase" for="annosvali">Annostusteluväli</label>
                <InputNumber min="0" id="annosvali" @bind-Value="laake.AnnosteleluValiId"/>
            </div>
            <div>
                <label class="form-label fw-bold text-uppercase" for="laakemuoto">Lääkemuoto</label>
                <div>Valitse lääkemuoto</div>
                <div>
                    <MyInputRadioGroup id="laakemuoto" @bind-Value="laake.LaakeMuotoId">
                        @foreach(var c in laakemuodot)
                        {
                            <div class="radio-item-group-laake">
                                <InputRadio Value ="@c.Id" id="@c.Id"/>
                                <label for="@c.Id">@c.LaakeMuotoNimi</label>
                                @if (avaakategoria!=c.Id)
                                    {
                                  
                                        <span class="oi oi-chevron-bottom oi-class" @onclick="@(()=>avaakategoria=c.Id)" >Avaa</span>
                                    
                                    }
                                    else
                                    { 
                                        <div>@c.LaakeMuotoKuvaus
                                     <span class="oi oi-chevron-top oi-class" @onclick="(()=>avaakategoria=null)"></span> </div>
                                    }
                               
                            </div>
                        }
                    </MyInputRadioGroup>
                    
                </div>
            </div>
         <div>
             <label class="form-label fw-bold text-uppercase" for="yomukaan">Yö lasketaan mukaan?</label>
             <InputRadioGroup id="yomukaan" @bind-Value="laake.YoMukaan">
                 <div class="radio-item-group-yo">
                     <InputRadio Value="true" id="yomukaantrue"/>
                     <label for="yomukaantrue">Yö lasketaan mukaan</label>
                     <InputRadio Value="false" id="yomukaanfalse"/>
                     <label for="yomukaanfalse">Yö ei lasketa mukaan</label>
                 </div>
             </InputRadioGroup>
         </div>
            <div class="center-children">
                <button class="btn btn-main btn-lg text-uppercase" type="submit">Lisää lääke</button>
            </div>
        </EditForm>
        
    </div>
           </div>
}
 
 
@code {
    private CreateLaakeModel laake = new();
    private List<LaakeMuotoModel> laakemuodot;
    private UserModel loggedInUser;

    private CreateYoMaarittelyModel yomukaan = new();
    private string avaakategoria=null;

    protected async override Task OnInitializedAsync()
    {
        laakemuodot = await laakemuotoData.GetAllLaakemuodot();
        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }
    private async Task CreateLaake()
    {
        //koska käytetään Modaalin jossa on ui specific modifiers, täytyy mapata
        LaakeModel l = new();
        l.Nimi = laake.Nimi;
        l.AnnosteluMaara = laake.AnnosteleluMaara;
        l.AnnosteluVali1 = laake.AnnosteleluValiId;
        l.Author = new BasicUserModel(loggedInUser);
        l.LaakeMuoto = laakemuodot.Where(c => c.Id == laake.LaakeMuotoId).FirstOrDefault();
        l.YoMukaan = laake.YoMukaan;
        l.Lisatty = DateTime.UtcNow;
        l.Muokattu = DateTime.UtcNow;

        if(l.LaakeMuoto is null)
        {
            laake.LaakeMuotoId = "";
            return;
        }

        await laakeData.CreateLaake(l);
        //puhdistetaan suggestionin, jottei luoda toista samanlaista
        laake = new();
        ClosePage();
    }
    private async Task CreateYoMaarittely()
    {

        //koska käytetään Modaalin jossa on ui specific modifiers, täytyy mapata
        YoMaarittelyModel l = new();
        l.YoAlku = yomukaan.YoAlku.ToUniversalTime();
        l.Author = new BasicUserModel(loggedInUser);
        if (yomukaan.YoLoppu < yomukaan.YoAlku)
        {
            l.YoLoppu=yomukaan.YoLoppu.AddDays(1);
        }else{
        l.YoLoppu = yomukaan.YoLoppu;}


        await yomaarittelyData.CreateYoMukaan(l);
        //puhdistetaan suggestionin, jottei luoda toista samanlaista
        yomukaan = new();
        ClosePage();
    }
}
