@page "/Details/{Id}"
@inject ISuggestionData suggestionData
@inject IUserData userData
@inject AuthenticationStateProvider authProvider
@inject NavigationManager navManager


<h1 class="page-heading text-uppercase mb-4">Suggestion Details</h1>

<div class="row justify-content-center detail-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        @if (suggestion is not null)
        {
            <div class="row suggestion-detail-row">
                <div class="col-11 suggestion-detail">
                    <div>
                        <div class="@GetVoteClass()" @onclick="VoteUp">
                            <div class="text-uppercase">@GetUpvoteTopText()</div>
                            <span class="oi oi-caret-top detail-upvote"></span>
                            <div class="text-uppercase">@GetUpvoteBottomText()</div>
                        </div>
                        <div class="suggestion-detail-date">
                            <div>@suggestion.DateCreated.ToString("dd.MM.yyyy")</div>
                        </div>
                    </div>
                    <div class="suggestion-detail-text">
                    <div class="fw-bold mb-2 suggestion-detail-suggestion">@suggestion.Suggestion</div>
                    <div class="mb-2 suggestion-detail-author">@suggestion.Author.DisplayName</div>
                    <div class="mb-2">@suggestion.Description</div>
                    <div class="suggestion-entry-text-category">
                        @suggestion.Category.CategoryName
                        </div>
                </div>
                </div>       
                <div class="col-1 close-button-section">
                    <button class="btn btn-close" @onclick="ClosePage"></button>
                </div>
            </div>
        }
    </div>
</div>

@if (suggestion?.SuggestionStatus is not null)
{
   <div class="row justify-content-center detail-form">
    <div class="col-xl-8 col-lg-10 suggestion-results form-layout">
        <div class="@GetStatusClass()"></div>
        <div class="suggestion-detail-status-section">
            <div class="suggestion-detail-status fw-bold mb-2 suggestion-detail-suggestion">
                @suggestion.SuggestionStatus.StatusName
            </div>
            <div class="suggestion-detail-owner-notes">
                @*käsittelee string kuin html, huom. ei ole hyvä laittaa kaikille nämä oikeudet*@
                @((MarkupString)suggestion.OwnerNotes)
            </div>
        </div>
    </div>
</div> 
}



@code {
    //parametri public koska kaikki muut sivutkin käyttävät tätä
    [Parameter]
    public string Id { get; set; }

    private SuggestionModel suggestion;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        suggestion = await suggestionData.GetSuggestion(Id);
        //uses userdata and populates it
        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string GetUpvoteTopText()
    {
        if (suggestion.UserVotes?.Count > 0)
        {
            return suggestion.UserVotes.Count.ToString("00");
        }
        else
        {
            //jos kirjautunut käyttääjä on ehdotuksen esittäjän >hän näkee "Awaiting"
            if (suggestion.Author.Id == loggedInUser?.Id)
            {
                return "Awaiting";
            }
            else
            {
                return "Click To";
            }
        }
    }

    //onko monikko tai yksikkö
    private string GetUpvoteBottomText()
    {
        if (suggestion.UserVotes?.Count > 1)
        {
            return "Upvotes";
        }
        else
        {
            return "Upvote";
        }
    }
    private async Task VoteUp()
    {
        if(loggedInUser is not null)
        {
            if (suggestion.Author.Id==loggedInUser.Id)
            {
                //Can't vote on your own suggestion
                return;
            }
            //pystyy toista kertaa klikkaamalla poistamaan oman äänensä. Nopeasti näyttää vielä tekemättä mitään tietokantaan.
            if (suggestion.UserVotes.Add(loggedInUser.Id)==false)
            {
                suggestion.UserVotes.Remove(loggedInUser.Id);
            }

            //päivitetään ääni tietokantaan
            await suggestionData.UpvoteSuggestion(suggestion.Id, loggedInUser.Id);

        }
        else
        {//jos ei ole kirjautunut ja klikkaaa äänestä niin vie kirjautumissivulle. True koska on ulkopuolinen sivu
            navManager.NavigateTo("/MicrosoftIdentity/Account/SignIn", true);
        }
    }

    private string GetVoteClass()
    {
        if (suggestion.UserVotes is null || suggestion.UserVotes.Count == 0)
        {
            return "suggestion-entry-no-votes";
        }
        else if(suggestion.UserVotes.Contains(loggedInUser?.Id))
        {
            return "suggestion-entry-voted";
        }
        else
        {
            return "suggestion-entry-not-voted";
        }
    }

    private string GetStatusClass()
    {
         if(suggestion is null || suggestion.SuggestionStatus is null)
        {
            return "suggestion-detail-status-none";
        }

        string output = suggestion.SuggestionStatus.StatusName switch
        {
            "Completed" => "suggestion-detail-status-completed",
            "Watching" => "suggestion-detail-status-watching",
            "Upcoming" => "suggestion-detail-status-upcoming",
            "Dismissed" => "suggestion-detail-status-dismissed",
            _ => "suggestion-detail-status-none",
        };
        return output;
    }
}