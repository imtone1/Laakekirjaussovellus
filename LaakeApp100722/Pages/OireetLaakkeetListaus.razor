@page "/OireetListaus"
@attribute [Authorize]
@using LaakeApp100722.Models
@using LaakeApp100722.Components
@inject AuthenticationStateProvider authProvider
@inject ILaakeData laakeData
@inject IUserData userData
@inject ILaakeMuotoData laakemuotoData
@inject IYoMukaanData yomaarittelyData
@inject IAnnosteluValiData annosteluData
@inject IOireetData oireData
@inject NavigationManager navManager



     <div class="row justify-content-center detail-form ottoaika-div">
                <div class="col-xl-8 col-lg-10 form-layout"> <div class="fw-bold text-uppercase">Ottoajat</div>
    

        @if (ottopvmlista is not null && oirelista is not null)
        {
                        @foreach (var o in ottopvmlistauslista.OrderBy(c => c.Pvm).ToList())
                        { 
                         
                            <p hidden >@Aika(o.Pvm)</p>


                            @if (aika != pvm)
                            {
                                
                                <div class="fw-bold">@o.Pvm.ToString("dd.MM.yyyy") klo </div>
                              
                                @*<ul>
                                    @foreach (var item in ottopvmlista)
                                    {
                                        @if (item.Otettu.ToString("dd.MM.yyyy") == aika)
                                        {
                                            <li><p>@item.Otettu.ToString("HH:mm")</p></li>
                                            <li><p>@item.Laake.Nimi</p></li>
                                            
                                            <li hidden >@PVM(item)</li>
                                        }
                                    }
                                </ul>*@
                                   <ul class="list-group">
                                
                                      @foreach (var item in ottopvmlistauslista.OrderBy(c => c.Pvm).ToList())
                                    {
                                        @if (item.Pvm.ToString("dd.MM.yyyy") == aika)
                                        {
                                  <li class="list-group-item d-flex justify-content-between align-items-start @item.Style">
                                    <div class="ms-2 me-auto">
                                      <div class="fw-bold">@item.Nimi</div>
                                      
                                      @*Cras justo odio*@
                                    </div>
                                    <span class="badge bg-dark">@item.Pvm.ToString("HH:mm")</span>
                                     
                                  </li>
                                   <li hidden >@PVM(item.Pvm)</li>
                                        }
                                    }
                                    </ul>
                            }
                  
                        }
                   
        }
    
    </div>
                
        </div>
    



@code {
    private List<LaakeModel> laake;
    private UserModel loggedInUser;
    private AnnosteluValiModel annosteluVali;
    private List<AnnosteluValiModel> ottopvmlista;
    private List<OireetModel> oirelista;
  
    private List<ottopvmlistaus> ottopvmlistauslista = new List<ottopvmlistaus>();
    private List<oirepvmlistaus> oirepvmlistauslista = new List<oirepvmlistaus>();

    private string aika = "";
    private string pvm = "";


    protected async override Task OnInitializedAsync()
    { 
        loggedInUser = await authProvider.GetUserFromAuth(userData);
        laake = await laakeData.GetUsersLaakkeet(loggedInUser.Id);
        ottopvmlista = await annosteluData.GetUsersAnnosteluVali(loggedInUser.Id);
        oirelista = await oireData.GetUsersOireet(loggedInUser.Id);
        Listaus();

    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private string Aika(DateTime time)
    {

        aika=time.ToString("dd.MM.yyyy");
        return aika;
    }

    private string PVM(DateTime date)
    {

        pvm=date.ToString("dd.MM.yyyy");
        return pvm;
    }

    private void Listaus()
    {
        // var output = oire
        //.Select(x => new
        //{
        //    id = x.Id,
        //    date = x.OirePvm,
        //    type = x.OireNimi
        //})
        //.Concat(laakeotto.
        //    Select(x => new
        //    {
        //        id = x.Id,
        //        date = x.Otettu,
        //        type = x.Laake.Nimi
        //    }))
        // .OrderByDescending(x => x.date).ToList();

        //yhdistettylistaus = output;
        //await oirelista;


        foreach (var item in ottopvmlista)
        {

            ottopvmlistauslista.Add(new ottopvmlistaus { Nimi = item.Laake.Nimi, Pvm = item.Otettu, Style="laake"});


        }

        foreach (var item in oirelista)
        {

            ottopvmlistauslista.Add(new ottopvmlistaus { Nimi = item.OireNimi, Pvm = item.OirePvm, Style="oire" });


        }

       

    }
}
